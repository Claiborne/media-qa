== Automation Framework ==

In order to consolidate the various test scripts used by the media qa team, the team is using a unified framework that will be the main entry point for all automated tests and scripts. 

== REQUIRED SOFTWARE == 

Below are the required software and gems you need to install to run this framework.

*** RUBY ***
Ruby version 1.9.2 - Recommend using RVM to install and set-up Ruby http://beginrescueend.com/

*** LOCAL RUBY GEMS ***
json_pure
nokogiri
rake
rest-client
rspec
selenium-webdriver

*** GIT ***
How to set up GIT on a Mac - http://help.github.com/mac-set-up-git/

== FRAMEWORK == 

All tests will be written using the rspec2 framework - https://www.relishapp.com/rspec

The current folder structure:

- media-qa
  - test
    - config
    - spec
    - lib
    - performance

The 'spec' folder is a repository for all tests and uses the format /test/spec/#{project}/#{module} (i.e /test/spec/social/profile)
The 'lib' folder contains all helper classes required by tests.
The performance folder contains all performance scripts.

There is a sample rspec test 'analytics.rb' under the spec/examples folder that can be used as a template for developing new tests.

To run all tests suites:

   cd media-qa/test
   rake all

To run all examples:

   cd media-qa/test
   rake examples

As new projects are added there will be rake tasks for running those projects like 
    rake cheats
    rake social
    rake ign-performance 

The test framework supports running in different environments so in order to use the proper environment you should specify it on the command line. Valid environments depend on the config file used by that project however we are standardizing on development, staging and production:
    rake social env=staging

Some staging environments support branches in the staging environment.  For these scenarios you need to provide the branch you want to test.  There is currently a hack in place to get this to work.  It takes the baseurl key in config and does a search and replace on the "branchname" pattern and replaces it with the environment variable that is set:
    rake social env=staging branch=release-xyz

sample config
staging:
  baseurl: branchname.stg.www.ign.com

== Using Tags ==

For smoke/basic assertions, use the tag 'smoke'
For assertions that spam the site or take a long time to run (for example, checking all the links on the page), use the tag 'spam'
For assertions only valid in a staging environment, use the tag 'stg'
For assertion only valid in the production environment, use the tag 'prd'

Here's an example of using an rspec tag in your spec file:

      it "should have at least one link", :smoke => true do
          check_have_a_link('div#right-col-outnow-tabs')
      end

To run only the assertions tagged 'smoke' in the frontend testsuite, I use the following command to include only smoke assertions
  rake frontend env=production SPEC_OPTS='--tag test'

To run the frontend test without the assertions tagged 'spam, I use the following command to exclude all spam assertions
	rake frontend env=production SPEC_OPTS='--tag ~spam'

To run the frontend testsuite in production without the staging-only assertions, I use the following command to  exclude all stage assertions
	rake frontend env=production SPEC_OPTS='--tag ~stg'
